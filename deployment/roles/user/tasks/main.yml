---
# Creating a user

- name: Add group
  sudo: true
  action: group name={{user.usergroup}}

- name: Add user
  sudo: true
  user: >
    name={{user.username}}
    group={{user.usergroup}}
    home=/home/{{user.username}}/
    shell=/bin/bash
    generate_ssh_key=no
    state=present
#  password={{user.password}}

- name: Create standard folders
  file: >
    path={{item}}
    state=directory
    owner={{user.username}}
    group={{user.usergroup}}
  with_items:
    - /home/{{user.username}}/logs
    - /home/{{user.username}}/dumps
    - /home/{{user.username}}/dumps/localhost
    - /home/{{user.username}}/run
    - /home/{{user.username}}/public
    - /home/{{user.username}}/public/static
    - /home/{{user.username}}/public/media
    - /home/{{user.username}}/protected/backups

- name: Create project folder with restricted permissions
  file: >
    path={{item}}
    state=directory
    owner={{user.username}}
    group={{user.usergroup}}
    mode=750
  with_items:
    - /home/{{user.username}}/{{project}}

- name: Create .ssh folder
  file: >
    path='{{home}}/.ssh'
    state=directory
    owner={{user.username}}
    group={{user.usergroup}}
    mode=0700

- name: Eventually create default deployment private key
  template: >
      src=id_rsa
      dest="{{home}}/.ssh/id_rsa"
      owner={{user.username}}
      group={{user.usergroup}}
      mode=0600
      force=no

- name: Eventually create default public deployment private key
  template: >
      src=id_rsa.pub
      dest="{{home}}/.ssh/id_rsa.pub"
      owner={{user.username}}
      group={{user.usergroup}}
      mode=0600
      force=no

#- name: Adds SSH authorized key for user
#  authorized_key: >
#    user={{user.username}}
#    key="{{ lookup('file','~/.ssh/id_rsa.pub') }}"
#    state=present

#- name: Replicate host ~/.gitconfig
#  copy: >
#    src=~/.gitconfig
#    dest=/home/{{user.username}}/.gitconfig
